---
swagger: "2.0"
info:
  description: "Duke decentralize bc"
  version: "0.0.1"
  title: "bc server"
host: "localhost:3000"
basePath: "/api"
tags:
- name: "User"
  description: "Register and enroll an user"
- name: "Transactions"
  description: "Transaction between participants"
- name: "Resident"
  description: "A participant named Resident"
- name: "Bank"
  description: "A participant named Bank"
- name: "Utility"
  description: "A participant named Utility"
- name: "Token"
  description: "An asset named Tokens"
- name: "Energy"
  description: "An asset named Energy"
- name: "Cash"
  description: "An asset named Cash"
- name: "EnergyTokenTransaction"
  description: "A transaction named EnergyTokenTransaction"
- name: "CashTokenTransaction"
  description: "A transaction named CashTokenTransaction"
schemes:
- "http"
- "https"
consumes:
- "application/json"
- "application/x-www-form-urlencoded"
- "application/xml"
- "text/xml"
produces:
- "application/json"
- "application/xml"
- "text/xml"
- "application/javascript"
- "text/javascript"
paths:
  /User:
    post:
      tags:
      - "User"
      summary: "Register and enroll a user to the fabric network"
      operationId: "createUser"
      parameters:
      - in: "body"
        name: "data"
        description: "Model instance data"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestError"
      x-swagger-router-controller: "User"
  /Resident:
    get:
      tags:
      - "Resident"
      summary: "Get all residents"
      operationId: "getAllResidents"
      parameters: []
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Resident"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Resident"
    post:
      tags:
      - "Resident"
      summary: "Create a new instance of the model and persist it into the data source."
      operationId: "createResident"
      parameters:
      - in: "body"
        name: "data"
        description: "Model instance data"
        required: true
        schema:
          $ref: "#/definitions/Resident"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Resident"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Resident"
  /Resident/{id}:
    get:
      tags:
      - "Resident"
      summary: "Find a resident by id"
      operationId: "findResidentById"
      parameters:
      - name: "id"
        in: "path"
        description: "Resident's ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Resident"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Resident"
    put:
      tags:
      - "Resident"
      summary: "Update resident by ID."
      operationId: "updateResident"
      parameters:
      - name: "id"
        in: "path"
        description: "Resident's ID"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "Resident's object"
        required: true
        schema:
          $ref: "#/definitions/Resident"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Resident"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Resident"
    delete:
      tags:
      - "Resident"
      summary: "Delete resident by ID"
      operationId: "deleteResidentById"
      parameters:
      - name: "id"
        in: "path"
        description: "Model id"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Resident"
  /Bank:
    get:
      tags:
      - "Bank"
      summary: "Get all banks"
      operationId: "getAllBanks"
      parameters: []
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bank"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Bank"
    post:
      tags:
      - "Bank"
      summary: "Create a new Bank"
      operationId: "createBank"
      parameters:
      - in: "body"
        name: "data"
        description: "Bank object"
        required: true
        schema:
          $ref: "#/definitions/Bank"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Bank"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Bank"
  /Bank/{id}:
    get:
      tags:
      - "Bank"
      summary: "Find bank by id"
      operationId: "findBankById"
      parameters:
      - name: "id"
        in: "path"
        description: "Bank object's id"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Bank"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Bank"
    put:
      tags:
      - "Bank"
      summary: "Update bank by id"
      operationId: "updateBank"
      parameters:
      - name: "id"
        in: "path"
        description: "Bank's id"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "Bank's object"
        required: true
        schema:
          $ref: "#/definitions/Bank"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Bank"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Bank"
    delete:
      tags:
      - "Bank"
      summary: "Delete bank by id"
      operationId: "deleteBank"
      parameters:
      - name: "id"
        in: "path"
        description: "Bank's id"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Bank"
  /Utility:
    get:
      tags:
      - "Utility"
      summary: "Get all Utilities"
      operationId: "getAllUtilities"
      parameters: []
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Utility"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Utility"
    post:
      tags:
      - "Utility"
      summary: "Create a new Utility"
      operationId: "createUtility"
      parameters:
      - in: "body"
        name: "data"
        description: "Utility object"
        required: true
        schema:
          $ref: "#/definitions/Utility"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Utility"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Utility"
  /Utility/{id}:
    get:
      tags:
      - "Utility"
      summary: "Get Utility by id"
      operationId: "findUtilityById"
      parameters:
      - name: "id"
        in: "path"
        description: "Utility id"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Utility"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Utility"
    put:
      tags:
      - "Utility"
      summary: "Update Utility"
      operationId: "updateUtility"
      parameters:
      - name: "id"
        in: "path"
        description: "Utility id"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "Utility object"
        required: true
        schema:
          $ref: "#/definitions/Utility"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Utility"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Utility"
    delete:
      tags:
      - "Utility"
      summary: "Delete Utility"
      operationId: "deleteUtility"
      parameters:
      - name: "id"
        in: "path"
        description: "Utility's ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Utility"
  /Token:
    get:
      tags:
      - "Token"
      summary: "Get all tokens"
      operationId: "getAllTokens"
      parameters: []
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Token"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Token"
    post:
      tags:
      - "Token"
      summary: "Create a new token"
      operationId: "createToken"
      parameters:
      - in: "body"
        name: "data"
        description: "Token object"
        required: true
        schema:
          $ref: "#/definitions/Token"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Token"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Token"
  /Token/{id}:
    get:
      tags:
      - "Token"
      summary: "Find a model instance by {{id}} from the data source."
      operationId: "findTokenById"
      parameters:
      - name: "id"
        in: "path"
        description: "Token's id"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Token"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Token"
    put:
      tags:
      - "Token"
      summary: "Update token by id"
      operationId: "updateToken"
      parameters:
      - name: "id"
        in: "path"
        description: "Model id"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "Token's object"
        required: true
        schema:
          $ref: "#/definitions/Token"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Token"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Token"
    delete:
      tags:
      - "Token"
      summary: "Delete token by id"
      operationId: "deleteToken"
      parameters:
      - name: "id"
        in: "path"
        description: "Token's id"
        required: true
        type: "string"
        format: "JSON"
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Token"
  /Energy:
    get:
      tags:
      - "Energy"
      summary: "Get all energy assets"
      operationId: "getAllEnergy"
      parameters: []
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Energy"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Energy"
    post:
      tags:
      - "Energy"
      summary: "Create a new Energy Asset"
      operationId: "createEnergy"
      parameters:
      - in: "body"
        name: "data"
        description: "Energy object"
        required: true
        schema:
          $ref: "#/definitions/Energy"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Energy"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Energy"
  /Energy/{id}:
    get:
      tags:
      - "Energy"
      summary: "Find energy asset by id"
      operationId: "getEnergyById"
      parameters:
      - name: "id"
        in: "path"
        description: "Energy id"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Energy"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Energy"
    put:
      tags:
      - "Energy"
      summary: "Update energy Asset"
      operationId: "updateEnergy"
      parameters:
      - name: "id"
        in: "path"
        description: "Energy id"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "Energy object"
        required: true
        schema:
          $ref: "#/definitions/Energy"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Energy"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Energy"
    delete:
      tags:
      - "Energy"
      summary: "Delete energy Asset"
      operationId: "deleteEnergy"
      parameters:
      - name: "id"
        in: "path"
        description: "Energy id"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Energy"
  /Cash:
    get:
      tags:
      - "Cash"
      summary: "Get all cash assets"
      operationId: "getAllCash"
      parameters: []
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Cash"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Cash"
    post:
      tags:
      - "Cash"
      summary: "Create a new cash asset"
      operationId: "createCash"
      parameters:
      - in: "body"
        name: "data"
        description: "Model instance data"
        required: true
        schema:
          $ref: "#/definitions/Cash"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Cash"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Cash"
  /Cash/{id}:
    get:
      tags:
      - "Cash"
      summary: "Find cash asset by id"
      operationId: "getCashById"
      parameters:
      - name: "id"
        in: "path"
        description: "Cash id"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Cash"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Cash"
    put:
      tags:
      - "Cash"
      summary: "Update cash asset"
      operationId: "updateCash"
      parameters:
      - name: "id"
        in: "path"
        description: "Cash id"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "Cash object"
        required: true
        schema:
          $ref: "#/definitions/Cash"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/Cash"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Cash"
    delete:
      tags:
      - "Cash"
      summary: "Delete cash by id"
      operationId: "deleteCash"
      parameters:
      - name: "id"
        in: "path"
        description: "Cash id"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "object"
            properties: {}
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Cash"
  /EnergyTokenTransaction:
    get:
      tags:
      - "EnergyTokenTransaction"
      summary: "Get All energytoken Transactions"
      operationId: "getAllEnergyTokenTransaction"
      parameters: []
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EnergyTokenTransaction"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "EnergyTokenTransaction"
    post:
      tags:
      - "EnergyTokenTransaction"
      summary: "Transact energy and token assets between 2 participants"
      operationId: "energyTokenTransaction"
      parameters:
      - in: "body"
        name: "data"
        description: "EnergyTokenTransaction Object"
        required: true
        schema:
          $ref: "#/definitions/EnergyTokenTransaction"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/EnergyTokenTransaction"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "EnergyTokenTransaction"
  /CashTokenTransaction:
    get:
      tags:
      - "CashTokenTransaction"
      summary: "Get all cashtoken transactions"
      operationId: "getAllCashTokenTransaction"
      parameters: []
      responses:
        200:
          description: "Request was successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CashTokenTransaction"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "CashTokenTransaction"
    post:
      tags:
      - "CashTokenTransaction"
      summary: "Transaction of cash and token between 2 participants"
      operationId: "cashTokenTransaction"
      parameters:
      - in: "body"
        name: "data"
        description: "CashTokenTransaction object"
        required: true
        schema:
          $ref: "#/definitions/CashTokenTransaction"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/CashTokenTransaction"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "CashTokenTransaction"
  /Transaction/{id}:
    get:
      tags:
      - "Transactions"
      summary: "Get transaction by id"
      operationId: "findTransactionById"
      parameters:
      - name: "id"
        in: "path"
        description: "Transaction id"
        required: true
        type: "string"
      responses:
        200:
          description: "Request was successful"
          schema:
            $ref: "#/definitions/EnergyTokenTransaction"
        400:
          description: "Bad Request exception"
          schema:
            $ref: "#/definitions/BadRequestError"
        500:
          description: "Internal server exception"
          schema:
            $ref: "#/definitions/InternalError"
      x-swagger-router-controller: "Transactions"
definitions:
  User:
    properties:
      username:
        type: "string"
        description: "Username of user"
      secret:
        type: "string"
        description: "password of user"
  InternalError:
    properties:
      message:
        type: "string"
        default: "Internal Server Error"
    description: "Internal Server Error"
  BadRequestError:
    properties:
      message:
        type: "string"
        default: "Bad Request Error"
    description: "Bad Request Error"
  Resident:
    type: "object"
    required:
    - "alias"
    - "cash"
    - "energy"
    - "firstName"
    - "lastName"
    - "tokens"
    - "type"
    properties:
      id:
        type: "string"
        description: "Primary key for resident, backend creates uuid"
        default: "sha256"
      firstName:
        type: "string"
      lastName:
        type: "string"
      alias:
        type: "string"
        description: "Alias name to hide user"
      tokens:
        type: "string"
        description: "The identifier of an struct of tokens"
      cash:
        type: "string"
        description: "The identifier of an struct of cash"
      energy:
        type: "string"
        description: "The identifier of an struct of energy"
      type:
        type: "string"
        description: "Either Prosumer or Consumer"
        enum:
        - "Prosumer"
        - "Consumer"
    description: "A participant named Resident"
    example:
      firstName: "firstName"
      lastName: "lastName"
      alias: "alias"
      tokens: "tokens"
      id: "sha256"
      type: "Prosumer"
      cash: "cash"
      energy: "energy"
  Bank:
    type: "object"
    required:
    - "cash"
    - "name"
    - "tokens"
    properties:
      id:
        type: "string"
        description: "Primary key for struct bank"
      name:
        type: "string"
        description: "Name of bank"
      tokens:
        type: "string"
        description: "The identifier of an struc of tokens"
      cash:
        type: "string"
        description: "The identifier of an struct of cash"
    description: "A participant named Bank"
    example:
      name: "name"
      tokens: "tokens"
      id: "id"
      cash: "cash"
  Utility:
    type: "object"
    required:
    - "energy"
    - "id"
    - "name"
    - "tokens"
    properties:
      id:
        type: "string"
        description: "The instance identifier for struct UtilityCompany"
      name:
        type: "string"
      tokens:
        type: "string"
        description: "The identifier of an struct of tokens"
      energy:
        type: "string"
        description: "The identifier of an struct of energy"
    description: "A participant named Utility"
    example:
      name: "name"
      tokens: "tokens"
      id: "id"
      energy: "energy"
  Token:
    type: "object"
    required:
    - "owner"
    - "ownerType"
    - "value"
    properties:
      id:
        type: "string"
        description: "The instance identifier for struct Tokens"
      value:
        type: "number"
        format: "double"
      owner:
        type: "string"
      ownerType:
        type: "string"
        enum:
        - "Resident"
        - "Bank"
        - "Utility"
    description: "An asset named Tokens"
    example:
      owner: "owner"
      ownerType: "Resident"
      id: "id"
      value: 0.80082819046101150206595775671303272247314453125
  Energy:
    type: "object"
    required:
    - "owner"
    - "ownerType"
    - "units"
    - "value"
    properties:
      id:
        type: "string"
        description: "The instance identifier for this struct Energy"
      units:
        type: "string"
        enum:
        - "kWh"
      value:
        type: "number"
        format: "double"
      owner:
        type: "string"
      ownerType:
        type: "string"
        enum:
        - "Resident"
        - "Bank"
        - "Utility"
    description: "An asset named Energy"
    example:
      owner: "owner"
      ownerType: "Resident"
      id: "id"
      units: "kWh"
      value: 0.80082819046101150206595775671303272247314453125
  Cash:
    type: "object"
    required:
    - "currency"
    - "owner"
    - "ownerType"
    - "value"
    properties:
      id:
        type: "string"
        description: "The instance identifier for this struct Cash"
      currency:
        type: "string"
        enum:
        - "USD"
      value:
        type: "number"
        format: "double"
      owner:
        type: "string"
      ownerType:
        type: "string"
        enum:
        - "Resident"
        - "Bank"
        - "Utility"
    description: "An asset named Cash"
    example:
      owner: "owner"
      ownerType: "Resident"
      currency: "USD"
      id: "id"
      value: 0.80082819046101150206595775671303272247314453125
  EnergyTokenTransaction:
    type: "object"
    required:
    - "energyDec"
    - "energyInc"
    - "rate"
    - "timestamp"
    - "tokenDec"
    - "tokenInc"
    - "value"
    properties:
      rate:
        type: "number"
        format: "double"
      value:
        type: "number"
        format: "double"
      tokenInc:
        type: "string"
        description: "The identifier of an instance of coinsInc"
      tokenDec:
        type: "string"
        description: "The identifier of an instance of coinsDec"
      energyInc:
        type: "string"
        description: "The identifier of an instance of energyInc"
      energyDec:
        type: "string"
        description: "The identifier of an instance of energyDec"
      transactionId:
        type: "string"
        description: "txID of this transaction, returned if transaction is successful"
      timestamp:
        type: "string"
        format: "date-time"
    description: "A transaction object name EnergyTokenTransaction"
    example:
      tokenInc: "tokenInc"
      energyInc: "energyInc"
      rate: 0.80082819046101150206595775671303272247314453125
      energyDec: "energyDec"
      value: 6.02745618307040320615897144307382404804229736328125
      tokenDec: "tokenDec"
      transactionId: "transactionId"
      timestamp: "2000-01-23T04:56:07.000+00:00"
  CashTokenTransaction:
    type: "object"
    required:
    - "cashDec"
    - "cashInc"
    - "timestamp"
    - "tokenDec"
    - "tokenInc"
    - "value"
    properties:
      value:
        type: "number"
        format: "double"
      tokenInc:
        type: "string"
        description: "The identifier of asset Token to increment"
      tokenDec:
        type: "string"
        description: "The identifier of asset Token to decrement"
      cashInc:
        type: "string"
        description: "The identifier of asset Cash to increment"
      cashDec:
        type: "string"
        description: "The identifier of asset Cash to decrement"
      transactionId:
        type: "string"
        description: "Transaction ID for this transaction"
      timestamp:
        type: "string"
        format: "date-time"
    description: "A Transaction object for CashToken Transactions"
    example:
      tokenInc: "tokenInc"
      cashInc: "cashInc"
      cashDec: "cashDec"
      value: 0.80082819046101150206595775671303272247314453125
      tokenDec: "tokenDec"
      transactionId: "transactionId"
      timestamp: "2000-01-23T04:56:07.000+00:00"
